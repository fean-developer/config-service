server:
  port: 9093

spring:
  application:
    name: products-service
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://mysql-headless:3306/fellauers_sales?createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useSSL=false
    username: ${DATABASE_USER}
    password: ${DATABASE_PASSWORD}
    hikari:
      connection-timeout: 60000
      maximum-pool-size: 5
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql:
    generate-ddl: true
    show-sql: true

  kafka:
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      enable-auto-commit: true
      bootstrap-servers: localhost:9092
      group-id: himanshu_consumer_group
      auto-offset-reset: earliest
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: '*'
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer


properties:
  kafka:
    products:
      topic: "PRODUCTS_TOPIC"

eureka:
  instance:
    hostname: localhost
    port: 9091
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${eureka.instance.port}/eureka

